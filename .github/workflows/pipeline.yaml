name: Deployment PipeLine
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]
jobs:
  setup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v5
      - name: Add Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: 'pnpm'
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false
      - name: Get Pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
  prettier:
    needs: [setup]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: 'pnpm'
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false
      - name: Get Pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Perf format
        run: pnpm run format
  eslint:
    needs: [prettier]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: 'pnpm'
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false
      - name: Get Pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Eslint Perse
        run: pnpm run lint
  build:
    needs: [format, eslint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: 'pnpm'
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false
      - name: Get Pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Redundant builds
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: client/dist
      - name: Builder
        if: ${{ github.event_name == 'push' }}
        run: pnpm -r run build
  deploy:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: 'pnpm'
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false
      - name: Get Pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Deployment to vercel
        if: ${{ github.event_name == 'push' }}
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
